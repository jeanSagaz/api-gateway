# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f0549fdc-9665-4b57-bdac-cc4d6199b174'
  imageRepository: 'apigateway'
  containerRegistry: 'testazcr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  # dockerfilePath: '$(Build.SourcesDirectory)/src/OcelotApiGateway/Dockerfile'
  tag: '$(Build.BuildId)'
  # imagePullSecret: 'testazcr6f3c-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build Image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: $(imagePullSecret)
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        # connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'test-aks-default'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'testazcr'
    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster      
      inputs:
        action: deploy
        # namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)