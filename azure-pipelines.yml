trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f0549fdc-9665-4b57-bdac-cc4d6199b174'
  imageGatewayRepository: 'api_gateway'
  imageAuthRepository: 'authentication_api'
  containerRegistry: 'testazcr.azurecr.io'
  dockerfileGatewayPath: '$(Build.SourcesDirectory)/src/OcelotApiGateway/Dockerfile'
  dockerfileAuthPath: '$(Build.SourcesDirectory)/src/ApiAuthentication/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'testazcr6f3c-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build Image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and publish '$(imageGatewayRepository)' image to Azure Container Registry
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: '$(imageGatewayRepository)'
        command: 'buildAndPush'
        Dockerfile: $(dockerfileGatewayPath)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and publish '$(imageAuthRepository)' image to Azure Container Registry
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: '$(imageAuthRepository)'
        command: 'buildAndPush'
        Dockerfile: $(dockerfileAuthPath)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      displayName: Publish Pipeline Artifact
      inputs:
        artifactName: 'manifests'
        path: 'manifests'

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: $(imagePullSecret)
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(System.ArtifactsDirectory)/manifests'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'test-aks-default'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'testazcr'
    - task: KubernetesManifest@1
      displayName: Deploy to Kubernetes cluster      
      inputs:
        action: deploy
        namespace: 'default'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'test-aks-default'
        manifests: |
          $(System.ArtifactsDirectory)/manifests/deployment.yml
        containers: '$(containerRegistry)/$(imageAuthRepository):$(tag)'
        imagePullSecrets: '$(imagePullSecret)'